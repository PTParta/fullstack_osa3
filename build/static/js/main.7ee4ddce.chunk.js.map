{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","personService","getAll","request","axios","get","console","log","then","response","data","create","newObject","post","remove","id","delete","update","person","url","put","Notification","message","className","Error","Filter","handleFilterChange","onChange","PersonForm","handleNameChange","handleNumberChange","addPerson","newName","newNumber","onSubmit","value","type","Persons","persons","filter","handleRemove","filteredPersons","name","toLowerCase","includes","map","number","onClick","window","confirm","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","error","setError","useEffect","initialPersons","handleUpdate","find","p","changedPerson","returnedPerson","setTimeout","catch","event","target","preventDefault","personObject","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ee4ddce.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    console.log('personService.getAll()')\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    console.log('personService.create()')\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    console.log('personService.remove() id:', id)\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = person => {\n    const url = baseUrl + \"/\" + person.id\n    console.log('personService.update() person:', person)\n    const request = axios.put(url, person)\n    return request.then(response => response.data)\n}\n\nconst personService = { getAll, create, remove, update }\n\nexport default personService","import React, { useEffect, useState } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({ handleFilterChange }) => {\n  return (\n    <div>filter shown with <input onChange={handleFilterChange} /></div>\n  )\n}\n\nconst PersonForm = ({ handleNameChange, handleNumberChange, addPerson, newName, newNumber }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>name: <input value={newName} onChange={handleNameChange} /></div>\n      <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ persons, filter, handleRemove }) => {\n  const filteredPersons = persons.filter(person =>\n    person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    < div >\n      {filteredPersons.map(person =>\n        <div key={person.name} >\n          <table>\n            <tbody>\n              <tr>\n                <td>{person.name} {person.number}</td>\n                <td>\n                  <button onClick={() => {\n                    if (window.confirm(`Delete ${person.name} ?`)) {\n                      handleRemove(person.id)\n                    }\n                  }}>delete</button>\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n        </div>\n      )}\n    </div >\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    const names = persons.map(person => person.name)\n    if (!names.includes(newName)) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      setPersons(persons.concat(personObject))\n      setNewName('')\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n\n          setNotification(`Added ${newName}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000);\n        })\n        .catch(error => {\n          //Remove the invalid person from persons so it doesn't show in the \n          //persons listing\n          setPersons(persons.filter(person => person.name !== personObject.name))\n          //console.log(error.response.data)\n          setError(error.response.data.error)\n          setTimeout(() => {\n            setError(null)\n          }, 3000);\n        })\n    } else {\n      if (window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)) {\n        handleUpdate(newName)\n\n      } else return\n      //window.alert(`${newName} is already added to phonebook`)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const handleRemove = id => {\n    console.log('handleRemove', id)\n    personService\n      .remove(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n\n        setNotification(`Deleted ${persons.find(p => p.id === id).name}`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000);\n      })\n  }\n\n  const handleUpdate = name => {\n    const person = persons.find(p => p.name === name)\n    const changedPerson = { ...person, number: newNumber }\n    console.log('changed person', changedPerson)\n    //handleUpdate(person.id)\n    personService\n      .update(changedPerson)\n      .then(returnedPerson => {\n        //console.log(returnedPerson)\n        setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n\n        setNotification(`Updated ${name}`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000);\n      })\n      .catch(error => {\n        setError(`Information of ${name} has already been removed from server`)\n        setPersons(persons.filter(p => p.id !== person.id))\n        setTimeout(() => {\n          setError(null)\n        }, 3000);\n      })\n  }\n\n  return (\n\n\n    <div>\n      <Notification message={notification} />\n      <Error message={error} />\n\n      <h2>Phonebook</h2>\n      <Filter handleFilterChange={handleFilterChange} />\n\n      <h3>add a new</h3>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber} />\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={filter} handleRemove={handleRemove} />\n    </div>\n  )\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}